# Generated by Django Security Enhancement

from django.db import migrations, models
import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0003_standardize_user_settings'),
    ]

    operations = [
        # 用户安全字段增强
        migrations.AddField(
            model_name='user',
            name='failed_login_attempts',
            field=models.PositiveIntegerField(default=0, verbose_name='失败登录次数'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_failed_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='最后失败登录时间'),
        ),
        migrations.AddField(
            model_name='user',
            name='account_locked_until',
            field=models.DateTimeField(blank=True, null=True, verbose_name='账户锁定至'),
        ),
        migrations.AddField(
            model_name='user',
            name='password_changed_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='密码修改时间'),
        ),
        migrations.AddField(
            model_name='user',
            name='two_factor_enabled',
            field=models.BooleanField(default=False, verbose_name='是否启用双因素认证'),
        ),
        migrations.AddField(
            model_name='user',
            name='two_factor_secret',
            field=models.CharField(blank=True, max_length=32, verbose_name='双因素认证密钥'),
        ),
        migrations.AddField(
            model_name='user',
            name='email_verified',
            field=models.BooleanField(default=False, verbose_name='邮箱是否验证'),
        ),
        migrations.AddField(
            model_name='user',
            name='email_verification_token',
            field=models.CharField(blank=True, max_length=64, verbose_name='邮箱验证令牌'),
        ),
        migrations.AddField(
            model_name='user',
            name='phone_verified',
            field=models.BooleanField(default=False, verbose_name='手机是否验证'),
        ),
        migrations.AddField(
            model_name='user',
            name='profile_visibility',
            field=models.CharField(
                choices=[('public', '公开'), ('private', '私有'), ('friends', '仅好友')],
                default='private',
                max_length=20,
                verbose_name='个人资料可见性'
            ),
        ),
        migrations.AddField(
            model_name='user',
            name='data_processing_consent',
            field=models.BooleanField(default=False, verbose_name='数据处理同意'),
        ),
        
        # 审计字段
        migrations.AddField(
            model_name='user',
            name='created_by',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='user_created_set',
                to=settings.AUTH_USER_MODEL,
                verbose_name='创建者'
            ),
        ),
        migrations.AddField(
            model_name='user',
            name='updated_by',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='user_updated_set',
                to=settings.AUTH_USER_MODEL,
                verbose_name='最后修改者'
            ),
        ),
        migrations.AddField(
            model_name='user',
            name='audit_log',
            field=models.JSONField(blank=True, default=dict, verbose_name='审计日志'),
        ),
        
        # 软删除字段
        migrations.AddField(
            model_name='user',
            name='is_deleted',
            field=models.BooleanField(default=False, verbose_name='是否删除'),
        ),
        migrations.AddField(
            model_name='user',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='删除时间'),
        ),
        migrations.AddField(
            model_name='user',
            name='deleted_by',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='user_deleted_set',
                to=settings.AUTH_USER_MODEL,
                verbose_name='删除者'
            ),
        ),
        
        # 用户会话安全字段增强
        migrations.AddField(
            model_name='usersession',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址'),
        ),
        migrations.AddField(
            model_name='usersession',
            name='user_agent',
            field=models.TextField(blank=True, verbose_name='用户代理'),
        ),
        migrations.AddField(
            model_name='usersession',
            name='device_fingerprint',
            field=models.CharField(blank=True, max_length=64, verbose_name='设备指纹'),
        ),
        migrations.AddField(
            model_name='usersession',
            name='location_info',
            field=models.JSONField(blank=True, default=dict, verbose_name='位置信息'),
        ),
        migrations.AddField(
            model_name='usersession',
            name='is_suspicious',
            field=models.BooleanField(default=False, verbose_name='是否可疑'),
        ),
        migrations.AddField(
            model_name='usersession',
            name='security_flags',
            field=models.JSONField(blank=True, default=dict, verbose_name='安全标记'),
        ),
        
        # 添加安全索引
        migrations.AddIndex(
            model_name='user',
            index=models.Index(
                fields=['email_verified', 'is_active'],
                name='auth_user_email_verified_active_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(
                fields=['failed_login_attempts', 'last_failed_login'],
                name='auth_user_failed_login_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(
                fields=['account_locked_until'],
                name='auth_user_locked_until_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(
                fields=['two_factor_enabled', 'email_verified'],
                name='auth_user_security_status_idx'
            ),
        ),
        
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(
                fields=['ip_address', 'created_at'],
                name='auth_session_ip_created_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(
                fields=['is_suspicious', 'created_at'],
                name='auth_session_suspicious_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(
                fields=['user', 'is_active', 'last_activity'],
                name='auth_session_user_active_idx'
            ),
        ),
        
        # 添加安全约束
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(
                check=models.Q(failed_login_attempts__gte=0),
                name='auth_user_failed_attempts_non_negative'
            ),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(account_locked_until__isnull=True) |
                    models.Q(account_locked_until__gt=models.F('last_failed_login'))
                ),
                name='auth_user_lock_time_valid'
            ),
        ),
    ]
