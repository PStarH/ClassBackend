# Generated by Django 4.2.13 on 2025-07-29 03:23

import core.security.mixins
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "audit_log",
                    models.JSONField(blank=True, default=dict, verbose_name="审计日志"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="是否删除"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="删除时间"
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="用户UUID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255,
                        unique=True,
                        validators=[django.core.validators.EmailValidator()],
                        verbose_name="邮箱地址",
                    ),
                ),
                ("username", models.CharField(max_length=100, verbose_name="用户名")),
                ("password", models.CharField(max_length=255, verbose_name="密码")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="最近登录时间"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="注册时间"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "failed_login_attempts",
                    models.PositiveIntegerField(default=0, verbose_name="失败登录次数"),
                ),
                (
                    "last_failed_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="最后失败登录时间"
                    ),
                ),
                (
                    "account_locked_until",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="账户锁定至"
                    ),
                ),
                (
                    "password_changed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="密码修改时间"
                    ),
                ),
                (
                    "two_factor_enabled",
                    models.BooleanField(
                        default=False, verbose_name="是否启用双因素认证"
                    ),
                ),
                (
                    "two_factor_secret",
                    models.CharField(
                        blank=True, max_length=32, verbose_name="双因素认证密钥"
                    ),
                ),
                (
                    "email_verified",
                    models.BooleanField(default=False, verbose_name="邮箱是否验证"),
                ),
                (
                    "email_verification_token",
                    models.CharField(
                        blank=True, max_length=64, verbose_name="邮箱验证令牌"
                    ),
                ),
                (
                    "phone_verified",
                    models.BooleanField(default=False, verbose_name="手机是否验证"),
                ),
                (
                    "profile_visibility",
                    models.CharField(
                        choices=[
                            ("public", "公开"),
                            ("private", "私有"),
                            ("friends", "仅好友"),
                        ],
                        default="private",
                        max_length=20,
                        verbose_name="个人资料可见性",
                    ),
                ),
                (
                    "data_processing_consent",
                    models.BooleanField(default=False, verbose_name="数据处理同意"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="删除者",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="最后修改者",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户",
                "db_table": "users",
            },
            bases=(models.Model, core.security.mixins.RowLevelSecurityMixin),
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "audit_log",
                    models.JSONField(blank=True, default=dict, verbose_name="审计日志"),
                ),
                (
                    "session_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="会话ID",
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="访问令牌"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("expires_at", models.DateTimeField()),
                ("is_active", models.BooleanField(default=True)),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP地址"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="用户代理")),
                (
                    "device_fingerprint",
                    models.CharField(
                        blank=True, max_length=64, verbose_name="设备指纹"
                    ),
                ),
                (
                    "location_info",
                    models.JSONField(blank=True, default=dict, verbose_name="位置信息"),
                ),
                (
                    "is_suspicious",
                    models.BooleanField(default=False, verbose_name="是否可疑"),
                ),
                (
                    "security_flags",
                    models.JSONField(blank=True, default=dict, verbose_name="安全标记"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="最后修改者",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserSettings",
            fields=[
                (
                    "user_uuid",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="settings",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
                (
                    "preferred_pace",
                    models.CharField(
                        choices=[
                            ("Very Detailed", "非常详细"),
                            ("Detailed", "详细"),
                            ("Moderate", "适中"),
                            ("Fast", "快速"),
                            ("Ultra Fast", "超快"),
                        ],
                        default="Moderate",
                        max_length=20,
                        verbose_name="偏好学习节奏",
                    ),
                ),
                (
                    "preferred_style",
                    models.CharField(
                        choices=[
                            ("Visual", "视觉型"),
                            ("Text", "文本型"),
                            ("Practical", "实践型"),
                        ],
                        default="Practical",
                        max_length=20,
                        verbose_name="偏好学习风格",
                    ),
                ),
                (
                    "tone",
                    models.CharField(
                        choices=[
                            ("friendly", "友好"),
                            ("professional", "专业"),
                            ("encouraging", "鼓励"),
                            ("casual", "随意"),
                            ("formal", "正式"),
                        ],
                        default="friendly",
                        max_length=20,
                        verbose_name="语调风格",
                    ),
                ),
                (
                    "feedback_frequency",
                    models.CharField(
                        choices=[
                            ("immediate", "即时反馈"),
                            ("lesson_end", "课程结束"),
                            ("daily", "每日"),
                            ("weekly", "每周"),
                            ("monthly", "每月"),
                        ],
                        default="lesson_end",
                        max_length=20,
                        verbose_name="反馈频率",
                    ),
                ),
                (
                    "major",
                    models.CharField(blank=True, max_length=100, verbose_name="专业"),
                ),
                (
                    "education_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("high_school", "高中"),
                            ("undergraduate", "本科"),
                            ("graduate", "研究生"),
                            ("phd", "博士"),
                            ("professional", "职业培训"),
                            ("other", "其他"),
                        ],
                        max_length=20,
                        verbose_name="教育水平",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="备注")),
                (
                    "skills",
                    models.TextField(
                        blank=True,
                        default="[]",
                        help_text="用户掌握的技能列表，JSON格式存储",
                        verbose_name="技能列表",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "用户设置",
                "verbose_name_plural": "用户设置",
                "db_table": "user_settings",
                "indexes": [
                    models.Index(
                        fields=["updated_at"], name="user_settin_updated_742bbf_idx"
                    ),
                    models.Index(
                        fields=["preferred_pace"], name="user_settin_preferr_891c8f_idx"
                    ),
                    models.Index(
                        fields=["preferred_style"],
                        name="user_settin_preferr_d87a9c_idx",
                    ),
                    models.Index(
                        fields=["education_level"],
                        name="user_settin_educati_b4900b_idx",
                    ),
                ],
            },
        ),
    ]
